<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name        "snmp">
<!ENTITY author      "sh4t">
<!ENTITY version     "2016.02.28">
<!ENTITY pluginURL   "https://github.com/sh4t/unraid-snmp/raw/master/snmp.plg">
<!ENTITY pkgversion  "5.7.2">
<!ENTITY gitURL      "https://raw.githubusercontent.com/&author;/unraid-snmp/master">
<!ENTITY plugdir     "/usr/local/emhttp/plugins/&name;">
<!ENTITY pkgdir      "/boot/packages">
<!ENTITY cfgdir      "/boot/config/plugins/&name;">
<!ENTITY pkghost     "&gitURL;/packages">

<!ENTITY snmppkg     "net-snmp-&pkgversion;-x86_64-2.txz">
<!ENTITY snmppkgmd5  "5b0a0b875e962707bd67fcd9a11f9d78">

<!ENTITY libnlpkg    "libnl-1.1.4-x86_64-1.txz">
<!ENTITY libnlpkgmd5 "435837a5bf0401a937d6ec93e458333b">

<!ENTITY iconfile    "snmp.png">
<!ENTITY iconfilemd5 "863e97dc0e59ae9352f558ee8e0d40a2">

<!ENTITY community   "public">
<!ENTITY location    "Here">
<!ENTITY contact     "root@tower">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         pluginURL="&pluginURL;">

<CHANGES>
##&name;

###2017.01.14
- Match perl version 5.22.2
- remove perl req

###2016.02.28
- Bump the version of perl to match nerd tools.

###2015.10.18
- Run temperature updates in the background

###2015.09.06
- Move packages to github for better reliability

###2015.09.05
- Add support for reporting share free space

###2015.08.25
- Download and install the drive temp script (duh)

###2015.08.24
- Added hard drive temperature capture

###2015.08.23
- Reduced logging to "warning" level

###2015.06.24
- Initial unRAID V6 release.
</CHANGES>

<!--

This plugin provides SNMP support for unRAID systems.

-->

<!--
create plugin README.md file
-->
<FILE Name="&plugdir;/README.md">
<INLINE>
###SNMP###

Installs and configures SNMP, the Simple Network Management Protocol. SNMP can be used to expose server information to
monitoring tools like Observium.
</INLINE>
</FILE>

<!--
Install prerequisites.
-->
<FILE Name="&pkgdir;/&libnlpkg;" Run="upgradepkg --install-new">
<URL>&pkghost;/&libnlpkg;</URL>
<MD5>&libnlpkgmd5;</MD5>
</FILE>

<!--
Get the package.
-->
<FILE Name="&pkgdir;/&snmppkg;" Run="upgradepkg --install-new">
<URL>&pkghost;/&snmppkg;</URL>
<MD5>&snmppkgmd5;</MD5>
</FILE>

<!--
Fetch an icon
-->
<FILE Name="&plugdir;/&iconfile;">
<URL>&gitURL;/&iconfile;</URL>
<MD5>&iconfilemd5;</MD5>
</FILE>

<!--
Fetch the drive temperature script
-->
<FILE Name="&plugdir;/drive_temps.sh">
<URL>&gitURL;/drive_temps.sh</URL>
</FILE>

<!--
Fetch the share free space script
-->
<FILE Name="&plugdir;/share_free_space.sh">
<URL>&gitURL;/share_free_space.sh</URL>
</FILE>

<!--
Set up the config file
-->
<FILE Name="&plugdir;/snmpd.conf">
<INLINE>
rocommunity &community;
syslocation &location;
syscontact &contact;
disk /mnt/disk1
disk /mnt/disk2
disk /mnt/disk3
disk /mnt/disk4
disk /mnt/disk5
disk /mnt/disk6
disk /mnt/disk7
disk /mnt/disk8
disk /mnt/disk9
disk /mnt/disk10
disk /mnt/disk11
disk /mnt/disk12
disk /mnt/disk13
disk /mnt/disk14
disk /mnt/disk15
disk /mnt/disk16
disk /mnt/disk17
disk /mnt/disk18
disk /mnt/disk19
disk /mnt/disk20
disk /mnt/cache

extend disktemp &plugdir;/drive_temps.sh
extend sharefree &plugdir;/share_free_space.sh
</INLINE>
</FILE>

<!--
Update rc.d to use our config file, restart snmpd, and test it
-->
<FILE Run="/bin/bash">
<INLINE>
echo "+=============================================================================="
echo "| Updating /etc/rc.d/rc.snmpd to use our config file, and to reduce logging"
echo "+=============================================================================="

bash /etc/rc.d/rc.snmpd stop

sed -i.old -e 's#/etc/snmp/snmpd.conf#&plugdir;/snmpd.conf#g' /etc/rc.d/rc.snmpd
sed -i.old -e 's#OPTIONS="#OPTIONS="-LF w /var/log/snmpd.log #g' /etc/rc.d/rc.snmpd

chmod a+x &plugdir;/drive_temps.sh
chmod a+x &plugdir;/share_free_space.sh

bash /etc/rc.d/rc.snmpd start

echo ""
echo ""

echo "+=============================================================================="
echo "| Testing SNMP by listing mounts"
echo "+=============================================================================="

RESULTS=$(snmpwalk -v 1 localhost -c public hrFSMountPoint 2>&amp;1)
if [[ "$RESULTS" =~ "/boot" ]]
then
  echo "Looks like snmpd is working... Output:"
  echo "$RESULTS"
else
  echo "Couldn't find /boot mount point in SNMP output. Output:"
  echo "$RESULTS"
  echo ""
  echo ""
  exit 1
fi

echo ""
echo "Here's what drive temperatures look like:"
echo snmpwalk -v 2c localhost -c public 'NET-SNMP-EXTEND-MIB::nsExtendOutLine."disktemp"'
snmpwalk -v 2c localhost -c public 'NET-SNMP-EXTEND-MIB::nsExtendOutLine."disktemp"'

echo ""
echo "Here's what share free space looks like:"
echo snmpwalk -v 2c localhost -c public 'NET-SNMP-EXTEND-MIB::nsExtendOutLine."sharefree"'
snmpwalk -v 2c localhost -c public 'NET-SNMP-EXTEND-MIB::nsExtendOutLine."sharefree"'

echo ""
echo ""

exit 0
</INLINE>
</FILE>

<!--
The 'post-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
echo ""
echo "-----------------------------------------------------------"
echo " &name; has been installed."
echo " Copyright 2015, David Coppit &lt;david@coppit.org&gt;"
echo " Modified / Updated 2017, Justin Shattuck"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
echo "+=============================================================================="
echo "| Uninstalling packages"
echo "+=============================================================================="

# Delete the package, and any old package files too
rm -f $(ls &pkgdir;/&name;*.txz 2>/dev/null)

# Delete the prerequisite packages
rm -f &pkgdir;/&libnlpkg;

# Uninstall the package
removepkg $(basename &snmppkg; .txz) | grep -v -e '  --&gt; Deleting'

# Don't Uninstall the prerequisites, in case some other plug is using them. On reboot, they'll get "removed" if no plugin
# needs them, or will be re-downloaded and reinstalled by some plugin that does need them.
#removepkg $(basename &libnlpkg; .txz) | grep -v -e '  --&gt; Deleting'

echo ""
echo ""

echo "+=============================================================================="
echo "| Deleting &plugdir;"
echo "+=============================================================================="

# Remove plugin.
rm -rf &plugdir;

echo ""
echo ""
</INLINE>
</FILE>

</PLUGIN>
